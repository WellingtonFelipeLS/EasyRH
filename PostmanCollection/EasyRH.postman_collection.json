{
	"info": {
		"_postman_id": "e82ef375-d263-4310-a48e-9a3c5c86829e",
		"name": "EasyRH",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34865647"
	},
	"item": [
		{
			"name": "RegisterEnterprise",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\r",
							"    \"random_number\",\r",
							"    _.random(14, 14)\r",
							")\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{$randomCompanyName}}\",\n    \"cnpj\": \"12345678912345\",\n    \"phoneNumber\": \"(11) 98765-4321\",\n    \"email\": \"{{$randomEmail}}\",\n    \"idNumber\": \"{{$randomBankAccount}}\",\n    \"address\": {\n        \"street\": \"{{$randomStreetName}}\",\n        \"number\": \"{{$randomInt}}\",\n        \"neighborhood\": \"{{$randomStreetName}}\",\n        \"complement\": \"{{$randomLoremSentence}}\",\n        \"city\": \"{{$randomCity}}\",\n        \"state\": \"SP\",\n        \"zipCode\": \"12345-678\",\n        \"country\": \"BRA\"\n    },\n    \"logoImage\": \"logo.png\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_enterprise_url}}/register",
					"host": [
						"{{base_enterprise_url}}"
					],
					"path": [
						"register"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "RegisterUser",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{$randomFullName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"teste123@\",\n    \"cpf\": \"123.456.789-01\",\n    \"dateofbirth\": \"1980-01-01\",\n    \"gender\": \"M\",\n    \"phone\": \"(79) 98844-5482\",\n    \"role\": true,\n    \"enterpriseNumber\": \"'73297597'\",\n    \"address\": {\n        \"street\": \"Rua Exemplo\",\n        \"complement\": \"Teste teste teste\",\n        \"number\": \"123\",\n        \"neighborhood\": \"Bairro Exemplo\",\n        \"city\": \"Cidade Exemplo\",\n        \"state\": \"SE\",\n        \"zipCode\": \"12345-678\",\n        \"country\": \"BRA\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_user_url}}/register",
					"host": [
						"{{base_user_url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "EditUser",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{$randomFullName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"teste123@\",\n    \"cpf\": \"123.456.789-01\",\n    \"dateofbirth\": \"1980-01-01\",\n    \"gender\": \"M\",\n    \"phone\": \"(79) 98844-5482\",\n    \"role\": true,\n    \"enterpriseNumber\": \"'73297597'\",\n    \"address\": {\n        \"street\": \"Rua Exemplo\",\n        \"complement\": \"Teste teste teste\",\n        \"number\": \"123\",\n        \"neighborhood\": \"Bairro Exemplo\",\n        \"city\": \"Cidade Exemplo\",\n        \"state\": \"SE\",\n        \"zipCode\": \"12345-678\",\n        \"country\": \"BRA\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_user_url}}/edit",
					"host": [
						"{{base_user_url}}"
					],
					"path": [
						"edit"
					]
				}
			},
			"response": []
		},
		{
			"name": "RetrieveUser",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_user_url}}/get?cpf=123.456.789-01",
					"host": [
						"{{base_user_url}}"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "cpf",
							"value": "123.456.789-01"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "RegisterDepartment",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{$randomDepartment}}\",\n    \"description\": \"{{$randomLoremSentence}}\",\n    \"enterprise_id\": \"91059118\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_department_url}}/register",
					"host": [
						"{{base_department_url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "http://localhost:8080"
		},
		{
			"key": "base_user_url",
			"value": "http://localhost:8080/api/user/v1",
			"type": "string"
		},
		{
			"key": "base_enterprise_url",
			"value": "http://localhost:8080/api/enterprise/v1",
			"type": "string"
		},
		{
			"key": "base_department_url",
			"value": "http://localhost:8080/api/department/v1",
			"type": "string"
		}
	]
}